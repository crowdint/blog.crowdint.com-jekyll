---
layout: post
title: Auto Retry Failed Cucumber Tests
author: Edwin Cruz
email: edwin.cruz@crowdint.com
avatar: f7412b373affd1d6db10752cf5d69315
published: true
---

If you're tired to re-kick builds in your CI server because non deterministic failures, this post is for you, after I
implemented this awesome feature our builds started to be more realistic, and developers now cares if their branch is red.

I'm going to show you how I got to the point to have auto retrying failed cucumber tests due non deterministic failures,
I started to dig into cucumber documentation and I couldn't find how to implement an auto retry feature straightforward,
after being a curious developer and some cucumber code reading I found that there was a formatter named 'rerun', so nice!
I went back to cucumber documentation and I found that it was what I was looking for and I could use it straight in my cucumber profiles:

{% highlight bash %}
#config/cucumber.yml
selenium: --format pretty --format rerun --out tmp/rerun.txt features/selenium --require features/selenium/step_definitions --require features/selenium/support
{% endhighlight %}

It can receive an extra parameter --out, this is used to store failed tests with line number, awesome!!, isn't it?

Ok, now I had the ability to track failed tests and store them in a txt file, now what's next? I started to think how my rake task
would look like, parsing the file and those ugly things, but I was sure that this problem had been already solved, it was as simple
as run 'cucumber --help' in command line to find out, and guess what?

{% highlight bash %}

$ cucumber --help
Usage: cucumber [options] [ [FILE|DIR|URL][:LINE[:LINE]*] ]+

Examples:
cucumber examples/i18n/en/features
cucumber @rerun.txt (See --format rerun)
cucumber examples/i18n/it/features/somma.feature:6:98:113
cucumber -s -i http://rubyurl.com/eeCl
{% endhighlight %}

Whooohooo, it accepts the file generated by rerun formatter!!! so I tried this:

{% highlight bash %}
$ cucumber @tmp/rerun.txt --format pretty features/selenium --require features/selenium/step_definitions --require features/selenium/support
{% endhighlight %}

And, it worked!... it took failed tests and ran them! Cool, now I had to integrate this with our cucumber rake tasks.

I thought it'd be easy, so I started with rerun rake task:

{% highlight ruby %}
namespace :cucumber do

  Cucumber::Rake::Task.new(:rerun, 'Rerun failed cucumber tests') do |t|
    unless File.exist?(File.join(Rails.root, 'tmp/rerun.txt'))
      File.open(File.join(Rails.root, 'tmp/rerun.txt'), 'w+').close
    t.profile = 'rerun'
  end

end
{% endhighlight %}

Doh! I ran it and failed because I didn't specify how 'rerun' profile in cucumber.yml, easy to fix:
{% highlight bash %}
#config/cucumber.yml
selenium: --format pretty --format rerun --out tmp/rerun.txt features/selenium --require features/selenium/step_definitions --require features/selenium/support
rerun: @tmp/rerun.txt --format pretty features/selenium --require features/selenium/step_definitions --require features/selenium/support
{% endhighlight %}

Done, I got my 'rake cucumber:rerun' completed and it worked fine. My next step was to include this in 'rake cucumber:all' and, theoretically
if selenium profile failed, it'd execute rerun task and retry failed tests, I got sad when it exited after selenium profile
finished right away, and I thought, of course! it works how it's supposed to work, it exits when it fails, so it was not that easy.

This was the tricky part, because I had to wrap this task up in a huge begin rescue block, I ended up implementing my own
super sophisticated task runner:

{% highlight ruby %}
def run_rake_task(name)
  begin
    Rake::Task[name].invoke
  rescue Exception => e
    return false
  end
  true
end
{% endhighlight %}

Cool, it wraps up my tasks and catches the error, I had everything needed, so I created another rake task:

{% highlight ruby %}
namespace :cucumber do

  desc 'Run selenium and rerun failed tests'
  task :selenium_with_retry do
    selenium_successful = run_rake_task("cucumber:selenium")
    rerun_successful = true
    unless selenium_successful
      rerun_successful = run_rake_task("cucumber:rerun")
    end
    unless selenium_successful || rerun_successful
      raise CucumberFailure.new 'Cucumber tests failed'
    end
  end

end
{% endhighlight %}

Done! I just replaced this new task in our main rake cruise task, and bingo! It now auto retries failed cucumber tests.

I know it has a lot of opportunity areas, but hopefully this helps to somebody else to get their builds green!

Thanks!