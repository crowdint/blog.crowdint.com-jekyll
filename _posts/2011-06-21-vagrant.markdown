---
layout: post
title: Vagrant to manage multiple dev environments
author: Mario Zaizar
email: mario@crowdint.com
avatar: 29612de9aa10447dc2f9ec84cf2ab1b2
---

Lets start rocking like a pro. Installing services (like mysql, redis, mongo) in your own
machine is old fashioned. They won't let you handle different versions, or different
configurations, and most of the time your dev machine isn't the same as your production server.
That's why Vagrant is there for us.

Vagrant allows you to create different virtualized machines, easy and separated from your
computer internals. So, you can handle all your dev environments (dev, stage, production)
including specific versions of all servers and services.

For example, I'm currently working on two different projects, and both use
[mongodb](http://mongodb.org) as the primary database locked with different
(and incompatible) versions.

So, I've started using Vagrant to handle that. When I need one version, I just start the box
that contains that server, and I don't mess with my system. That's why Vagrant is so important.

It uses [Virtualbox](http://virtualbox.org) internally, and supports command line, easy ssh access,
easy distribution, shared folders, and other goodies.

You can even package your own boxes, and distribute it to all of your team members.
One box to rule them all.

### Installation

You will require *ruby*, *rubygems*, and *virtualbox 4*.
{% highlight bash %}
    gem install vagrant
    vagrant --help
{% endhighlight %}

### Creating a new box
{% highlight bash %}
    mkdir ~/Vagrants;
    cd ~/Vagrants/;
    vagrant box add base http://files.vagrantup.com/lucid32.box;
    vagrant init
{% endhighlight %}

*Notes:*
The `vagrant box add` command will download a pre-created ubuntu linux system
(so ~260Mb will be downloaded)
Vagrant uses one configuration file per box, and it's called `VagrantFile`.

### Starting your box

{% highlight bash %}
    cd ~/Vagrants/;
    vagrant up
{% endhighlight %}

And that's it. Now you have a new Linux environment ready to be configured
and installed with your software, servers, services, etc.

*Note:* if you require direct access from the outside to your box, just enable ssh
access editing the `VagrantFile`, and uncommenting this: `config.vm.network "33.33.33.10"`.
For example, if you're configuring a MySQL instance, your client will connect to 33.33.33.10:3606.

### Accessing it

Now, to install your servers, all you need to do is log in to the box,
do some apt-get install, configure your settings.

{% highlight bash %}
    cd ~/Vagrants/;
    vagrant ssh
    # sudo apt-get install your-stuff-1.2.3
    exit
{% endhighlight %}

### Power OFF, suspend, resume..

It's as easy as:

{% highlight ruby %}
    vagrant halt
    vagrant suspend
    vagrant resume
    vagrant destroy
{% endhighlight %}

## And that's it

Now it's your turn. Try it, learn it, use it, enjoy it.
*And, see you next time!*

### More info

- More info at: [vagrantup.com](http://vagrantup.com)
- And thanks to [Edwin](https://twitter.com/#!/softr8), for his first Vagrant explanation.
